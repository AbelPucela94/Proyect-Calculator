let getFirstNumber;
let getSecondNumber = '';
let getUserName = '';
let getOperationList = [];


getUserName = prompt('Introduce tu nombre: ')
alert(`Â¡Bienvenido a la CODER Calculadora, ${getUserName.toUpperCase()}!`);


const getCalculator = () =>{
    getFirstNumber = parseFloat(prompt('Ingrese el primer nÃºmero:  '));
    if (isNaN(getFirstNumber) || getFirstNumber === '') {
        alert('Por favor, introduce un nÃºmero vÃ¡lido');
        getCalculator();
        return;
    };
    getOperationList.push(getFirstNumber);
    
    
    getSecondNumber = prompt('Ingrese otro nÃºmero o pulse "INTRO" para calcular SÃ“LO la raiz cuadrada del primer nÃºmero:  ');
    if (getSecondNumber === '') {
        getSquareRoot();
        return;
    };
    
    getSecondNumber = parseFloat(getSecondNumber);
    if (isNaN(getSecondNumber)) {
        alert('Por favor, introduce un nÃºmero vÃ¡lido');
        getCalculator();
        return;
    };
    getOperationList.push(getSecondNumber);

    
    alert('Recalculando operaciones... Â¡Imprimiendo soluciones!')
    
    console.log('                  ğŸ§®   CALCULADORA   ğŸ§®                       ');
    console.log('- - - - - - - - - - - -  - -');
    getSum();
    console.log('- - - - - - - - - - - -  - -');
    getRest();
    console.log('- - - - - - - - - - - -  - -');
    getMultiplier();
    console.log('- - - - - - - - - - - -  - -');
    getDivision();
    console.log('- - - - - - - - - - - -  - -');
    
    getAnotherOperation();
};


const getSquareRoot = () => {
    let doTheSquareRoot = Math.sqrt(getFirstNumber);
    console.log('                  ğŸ§®   CALCULADORA   ğŸ§®                       ');
    console.log('- - - - - - - - - - - -  - -');
    console.log(`La RAIZ CUADRADA del nÃºmero introducido es: ${doTheSquareRoot.toFixed(3)}`);
    console.log(`Lista: ${getOperationList.join('|')}`);
    getAnotherOperation();
};


const getSum = () => {
    let getSumOperation = getFirstNumber + getSecondNumber;
    console.log(`La suma es: ${getSumOperation.toFixed(3)}`);
    console.log(`Lista: ${getOperationList.join('|')}`);
    let totalSum = 0;
    for (let number of getOperationList) {
        totalSum += parseFloat(number);
    };
    console.log(`TOTAL Introducidos: ${totalSum.toFixed(3)}`);
};


const getRest = () => {
    let getRestOperation = getFirstNumber - getSecondNumber;
    console.log(`La resta es: ${getRestOperation.toFixed(3)}`);
    console.log(`Lista: ${getOperationList.join('|')}`);
    let totalRest = 0;
    for (let number of getOperationList) {
        totalRest -= parseFloat(number);
    };
    console.log(`TOTAL Introducidos: ${totalRest.toFixed(3)}`);
};


const getMultiplier = () => {
    let getMultiplierOperation = getFirstNumber * getSecondNumber;
    console.log(`La multiplicaciÃ³n es: ${getMultiplierOperation.toFixed(3)}`);
    console.log(`Lista: ${getOperationList.join('|')}`);
    let totalMultiplication = 0;
    for (let number of getOperationList) {
        totalMultiplication *= parseFloat(number);
    };
    console.log(`TOTAL Introducidos: ${totalMultiplication.toFixed(3)}`);
};


const getDivision = () => {
    let getDivisionOperation = getFirstNumber / getSecondNumber;
    console.log(`La divisiÃ³n es: ${getDivisionOperation.toFixed(3)}`);
    console.log(`Lista: ${getOperationList.join('|')}`);
    let totalDivision = 0;
    for (let number of getOperationList) {
        totalDivision /= parseFloat(number);
    };
    console.log(`TOTAL Introducidos: ${totalDivision.toFixed(3)}`);
};


const getAnotherOperation = () => {
    let isAnotherOperation = confirm('Pulse ACEPTAR para mÃ¡s operaciones o CANCELAR para salir')
    if (isAnotherOperation === true) {
        getCalculator();
    } else {
        isExit();
    };
};


const isExit = () => {
    alert(`Â¡Hasta la prÃ³xima, ${getUserName.toUpperCase()}! ğŸ‘‹`);
};



getCalculator();